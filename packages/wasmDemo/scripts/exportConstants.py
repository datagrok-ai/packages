""" exportConstants.py
Constants for C/C++-to-wasm export script.
"""

# export settings constants
NAME = 'name'
FOLDER = 'folder'
RUNTIME_SYSTEM = 'runtimeSystemFile'
RUNTIME_SYSTEM_FOR_WEBWORKER= 'runtimeSystemForWebWorker'
PACKAGE_FILE = 'packageFile'

# constants for function specification
ARGUMENTS = 'arguments'
OUTPUT = 'output'
ANNOTATION = 'annotation'
PROTOTYPE = 'prototype'
CALL_ARGS = 'callArgs'
WW_PROTOTYPE = 'prototypeForWebWorker'

AUTOMATIC_GENERATION_LINE = '// The following code is generated automatically.'

# constants for processing code that is generated by Emscripten
EM_LIB_EXTENSION = '.js'
WW_FILE_SUFFIX = 'ForWebWorker'
NUM_OF_LINE_TO_MODIFY = 1
KEY_WORD_TO_ADD = 'export '
LINE_TO_REPLACE = 'fetch(wasmBinaryFile,{credentials:"same-origin"})' 

# constants for generating JS-code
CALL_WASM = 'callWasm'
WORKER_SUFFIX = 'Worker'
IN_WEBWORKER_SUFFIX = 'InWebWorker'
WORKER_EXTENSION = '.js'
CPP_WRAPPER_FUNCTION = 'cppWrapper'
GET_CPP_INPUT = 'getCppInput'
GET_RESULT = 'getResult'
WW_SPACE = ' ' * 2
WW_SUBSPACE = ' ' * 4
WW_SUBSUBSPACE = ' ' * 6
SPACE = ' ' * 2
SUBSPACE = ' ' * 4
SUBSUBSPACE = ' ' * 6

# file operating constants
READ_MODE = 'r'
WRITE_MODE = 'w'
APPEND_MODE = 'a'

# auxiliry map 
sizesMap = {'rowCount': 'numOfRows', 'columnCount': 'numOfColumns', 'data': 'data'}