import * as grok from 'datagrok-api/grok';
import * as ui from 'datagrok-api/ui';
import * as DG from 'datagrok-api/dg';

import {
  category,
  test,
  expectArray,
} from '@datagrok-libraries/utils/src/test';
import { getCombinedDistanceMatrix } from '../workers/distance-worker-creator';
import { mapToFixed } from './utils/array-utils';
const sequences = [
  'CATAATGGAATCCAACACCATGTCAAGCTTTCAGGTAGACTGTTTTCTTTGGCATATTCGCAAGCGATTTGCAGACAATGGATTGGG',
  'AAATGGAAGACTTTGTGCGACAATGCTTCAATCCAATGATCGTCGAGCTTGCGGAAAAGGCAATGAAAGAATATGGGGAAGATCCCA',
  'GAATGGATGTCAATCCGACTCTACTTTTCCTAAAAATTCCAGCACAAAATGCCATAAGCACCACATTCCCTTATACTGGAGATCCTC',
  'ACTCAATGAGTGACATCGAAGCCATGGCGTCTCAAGGCACCAAACGATCATATGAACAAATGGAGACTGGTGGGGAGCGCCAGGATA',
  'ACCAAAAGATAATAACCATTGGTTCGGTCTGTATGACAATTGGAATGGCTAACTTAATATTACAAATTGGAAACATAATCTCAATAT',
  'TACTAGTAGTCCTGCTATATACATTTACAACCGCAAGTGCAGACACATTATGTATAGGTTATCATGCGAACAATTCAACTGACACTG',
  'TTGTGCGACAATGCTTCAATCCAATGATCGTCGAGCTTGCGGAAAAGGCAATGAAAGAATATGGGGAAGATCCGAAAATCGAAACTA',
  'ATCCGACTCTACTTTTCCTAAAAATTCCAGCGCAAAATGCCATAAGCACCACATTCCCTTATACTGGAGATCCTCCATACAGCCATG',
  'ATCCGACTCTACTTTTCCTAAAAGTTCCAGCGCAAAATGCCATAAGCACCACATTCCCTTATACTGGAGATCCTCCATACAGCCATG',
  'ATCAAAAGATAATAACCATTGGATCAATCAGTATAGCAATCGGAATAATTAGTCTAATGTTGCAAATAGGAAATATTATTTCAATAT',
];
const sequences2 = [
  'ACCAAAAGATAATAACCATTGGTTCGGTCTGTATGACAATTGGAATGGCTAACTTAATATTACAAATTGGAAACATAATCTCAATAT',
  'ACCAAAAGATAATAACCATTGGTTCGGTCTGTATGACAATTGGAATGGCTAACTTAATATTACAAATTGGAAACATAATCTCAATAT',
  'ACTCAATGAGTGACATCGAAGCCATGGCGTCTCAAGGCACCAAACGATCATATGAACAAATGGAGACTGGTGGGGAGCGCCAGGATA',
  'GAATCCAAACCAAAAGATAATAACCATTGGTTCGATCTGTATGACAATTGGAATGGCTAACTTAATATTACAAATTGGAAACATAAT',
  'GAATGGATGTCAATCCGACTCTACTTTTCCTAAAAATTCCAGCACAAAATGCCATAAGCACCACATTCCCTTATACTGGAGATCCTC',
  'AGCAACAAAAATGAAGGCAATACTAGTAGTTCTGCTATATACATTTACAACCGCAAATGCAGACACATTATGTATAGGTTATCATGC',
  'ACTCAATGAGTGACATCGAAGCCATGGCATCTCAAGGCACCAAACGATCGTATGAACAAATGGAGACTGGTGGGGAGCGCCAGGATG',
  'ACTCAATGAGTGACATCGAAGCCATGGCGTCTCAAGGCACCAAACGATCATATGAACAAATGGAGACTGGTGGGGAGCGCCAGGATA',
  'TCAATATGGAGAGAATAAAAGAGCTGAGAGATCTAATGTCGCAGTCCCGCACTCGCGAGATACTCACTAAGACCACTGTGGACCATA',
  'AAATGGAAGACTTTGTGCGACAATGCTTCAATCCAATGATCGTCGAGCTTGCGGAAAAGGCAATGAAAGAATATGGGGAAGATCCCA',
];

const hNumbers = [1, 3, 5, 2, 4, 2.5, 3.2, 5.3, 4.5, 3.5];
const hNumbers2 = [3, 5, 1, 2.4, 4.5, 2.4, 2.1, 2.3, 5.5, 4.5];

const DNADistances1 = [
  7, 7, 6.928203105926514, 7, 6.7082037925720215, 6.928203105926514,
  7.141428470611572, 7.141428470611572, 6.928203105926514, 6.7082037925720215,
  6.78233003616333, 7, 7, 4.898979663848877, 7.211102485656738,
  7.141428470611572, 6.855654716491699, 7.071067810058594, 7.211102485656738,
  6.557438373565674, 6.928203105926514, 5, 5.099019527435303, 7.141428470611572,
  6.78233003616333, 7, 6.7082037925720215, 7, 6.928203105926514,
  6.855654716491699, 7, 6.78233003616333, 7.141428470611572, 7.071067810058594,
  4.4721360206604, 6.78233003616333, 6.557438373565674, 6.557438373565674,
  6.78233003616333, 6.928203105926514, 6.928203105926514, 6.78233003616333, 1,
  7, 6.928203105926514,
];

const DNADistances2Cols = [
  0.9411764740943909, 1.2916491031646729, 0.9778381586074829,
  1.3732491731643677, 1.1818188428878784, 1.290824055671692, 1.3204972743988037,
  1.373216986656189, 1.318041205406189, 1.235667109489441, 0.9409704804420471,
  1.3732491731643677, 1.2402338981628418, 1.0101094245910645, 1.335119605064392,
  1.373216986656189, 1.304406762123108, 1.3592876195907593, 1.3872836828231812,
  1.2370415925979614, 0.9233726859092712, 0.47058823704719543,
  1.0113537311553955, 1.3204972743988037, 1.2769564390182495,
  1.2277966737747192, 1.277604341506958, 1.3454996347427368, 1.2774322032928467,
  1.2633596658706665, 1.252842664718628, 1.3050298690795898, 1.373216986656189,
  1.3457527160644531, 0.9421694874763489, 1.263124942779541, 1.2370415925979614,
  1.19460928440094, 1.290926218032837, 0.9233726859092712, 1.2774322032928467,
  1.2494362592697144, 0.8846153616905212, 1.2916491031646729, 1.251105546951294,
];

const DNAAndNumericsDistances = [
  1.0657453536987305, 1.3732491731643677, 0.9548763036727905,
  1.2034589052200317, 0.8982366323471069, 1.0484696626663208,
  1.4004173278808594, 1.2343697547912598, 1.0484696626663208,
  0.9971604943275452, 0.9170860052108765, 0.9738137125968933,
  0.9738137125968933, 0.45098039507865906, 1.1180340051651, 1.0117651224136353,
  0.9019607901573181, 1.218854546546936, 1.0307763814926147, 1.1138674020767212,
  1.0484696626663208, 0.47058823704719543, 0.5502655506134033,
  1.1005311012268066, 1.014172911643982, 0.9411764740943909, 0.8982366323471069,
  1.2034589052200317, 1.0484696626663208, 0.9359664916992188,
  1.0657453536987305, 0.9170860052108765, 1.0117651224136353,
  0.9607843160629272, 0.4486566483974457, 0.9170860052108765,
  1.1138674020767212, 0.963431715965271, 0.9170860052108765, 1.0484696626663208,
  0.9548763036727905, 0.8823529481887817, 0.25, 1.0657453536987305,
  0.9548763036727905,
];

const numericsDistances = [
  1.4142135381698608, 2, 1, 1.7320507764816284, 1, 1.4142135381698608, 2,
  1.7320507764816284, 1.4142135381698608, 1.4142135381698608, 1, 1, 1, 0,
  1.4142135381698608, 1, 0, 1.7320507764816284, 1, 1.7320507764816284,
  1.4142135381698608, 0, 1, 1.4142135381698608, 1.4142135381698608, 0, 1,
  1.7320507764816284, 1.4142135381698608, 1, 1.4142135381698608, 1, 1, 0, 1, 1,
  1.7320507764816284, 1.4142135381698608, 1, 1.4142135381698608, 1, 0, 1,
  1.4142135381698608, 1,
];

const numericsDistancesTwoCols = [
  0.7071067690849304, 1.1180340051651, 0.3535533845424652, 0.7905694246292114,
  0.3535533845424652, 0.55901700258255, 1.0307763814926147, 0.9013878107070923,
  0.55901700258255, 1.1180340051651, 0.7905694246292114, 0.3535533845424652,
  0.7905694246292114, 0.75, 0.9013878107070923, 0.25, 0.25, 0.7905694246292114,
  0.7905694246292114, 0.7905694246292114, 0.55901700258255, 0.25,
  1.0307763814926147, 0.9013878107070923, 0.7071067690849304, 0, 0.25, 0.75,
  0.9013878107070923, 0.55901700258255, 0.7071067690849304, 0.55901700258255,
  0.55901700258255, 0.25, 0.25, 0.25, 0.75, 0.9013878107070923,
  0.55901700258255, 0.5, 0.7905694246292114, 0.5, 0.7905694246292114,
  0.7071067690849304, 0.3535533845424652,
];

category('CalculateDistances', () => {
  test('CalcDistanceDNA', async () => {
    const seqCols = [DG.Column.fromStrings('Sequence', sequences)];
    seqCols[0].semType = DG.SEMTYPE.MACROMOLECULE;
    const matrix = await getCombinedDistanceMatrix(seqCols);
    expectArray(mapToFixed(matrix!.data), mapToFixed(DNADistances1));
  });

  test('CalcDistanceDNATwoCols', async () => {
    const seqCol1 = DG.Column.fromStrings('Sequence', sequences);
    const seqCol2 = DG.Column.fromStrings('Sequence2', sequences2);
    seqCol1.semType = DG.SEMTYPE.MACROMOLECULE;
    seqCol2.semType = DG.SEMTYPE.MACROMOLECULE;
    const matrix = await getCombinedDistanceMatrix([seqCol1, seqCol2]);
    expectArray(mapToFixed(matrix!.data), mapToFixed(DNADistances2Cols));
  });

  test('CalcDistanceDNAAndNumeric', async () => {
    const seqCol = DG.Column.fromStrings('Sequence', sequences);
    const numCol = DG.Column.fromList('int', 'numbers', hNumbers);
    seqCol.semType = DG.SEMTYPE.MACROMOLECULE;
    const matrix = await getCombinedDistanceMatrix([seqCol, numCol]);
    expectArray(mapToFixed(matrix!.data), mapToFixed(DNAAndNumericsDistances));
  });

  test('CalcDistanceNumeric', async () => {
    const numCol = DG.Column.fromList('int', 'numbers', hNumbers);
    const matrix = await getCombinedDistanceMatrix([numCol]);
    expectArray(mapToFixed(matrix!.data), mapToFixed(numericsDistances));
  });

  test('CalcDistanceNumericTwoCols', async () => {
    const numCol1 = DG.Column.fromList('int', 'numbers', hNumbers);
    const numCol2 = DG.Column.fromList('int', 'numbers2', hNumbers2);
    const matrix = await getCombinedDistanceMatrix([numCol1, numCol2]);
    expectArray(mapToFixed(matrix!.data), mapToFixed(numericsDistancesTwoCols));
  });
});
