{
  "#type": "ViewLayout",
  "type": "TableView",
  "friendlyName": "ecg",
  "viewStateMap": {
    "containerType": "horizontal",
    "state": {
      "width": 897,
      "height": 641
    },
    "children": [
      {
        "containerType": "vertical",
        "state": {
          "width": 413,
          "height": 641
        },
        "children": [
          {
            "containerType": "fill",
            "state": {
              "width": 413,
              "height": 301,
              "documentManager": true
            },
            "children": [
              {
                "containerType": "panel",
                "state": {
                  "width": 413,
                  "height": 301,
                  "element": {
                    "id": "ee936dc0-0b50-11e9-c189-a7326b50f664",
                    "type": "Grid",
                    "look": {
                      "#type": "HeatMapLook",
                      "allowColumnMenu": true,
                      "topLevelDefaultMenu": true,
                      "columns": [
                        {
                          "width": 170,
                          "columnName": "Time",
                          "cellType": "number"
                        },
                        {
                          "width": 106,
                          "columnName": "EcgWaveform",
                          "cellType": "number"
                        }
                      ]
                    }
                  }
                },
                "children": [
                ]
              }
            ]
          },
          {
            "containerType": "panel",
            "state": {
              "width": 413,
              "height": 331,
              "element": {
                "id": "ee9394d0-0b50-11e9-c219-65d2a781b9cf",
                "type": "Scripting Viewer",
                "look": {
                  "script": "#name: Scalogram\n#description: CWT (Morlet wavelet) scalogram plot\n#help: https://en.wikipedia.org/wiki/Scaleogram\n#language: r\n#tags: demo, viewers\n#sample: sensors/ecg.csv\n#input: dataframe data [Input data table]\n#input: column signal {type:numerical; allowNulls:false} [Column with signal]\n#input: double sampleRate = 256.0 [Signal sample rate, in Hz]\n#input: int octaves = 8 [Octaves in scale values]\n#input: int voices = 16 [Voices in scale values]\n#input: bool removeDc = TRUE [Flag to force DC component removal]\n#output: graphics [Scalogram plot]\n\nrequire(Rwave)\nrequire(colorRamps)\n\n# Select signal column\nsignal = data[[signal]]\n\n# Remove DC\nif (removeDc == TRUE) {\n  signal = signal - mean(signal)\n}\n\n# Computes the scale values for a given number of octaves and voices\ngetScales <- function(numOctave, numVoice) {\n  scale = vector(length=(numOctave * numVoice))\n  scale.index = 1\n  for (octave in 0:(numOctave - 1)) {\n    for (voice in 0:(numVoice - 1)) {\n      scale[scale.index] = 2^(octave + (voice / numVoice))\n      scale.index = scale.index + 1\n    }\n  }\n  return (scale)\n}\n\n# Computes the corresponding frequency values for a given vector of scales,\n# center frequency, and sample rate\nscaleToFreq <- function(scale, center, sampleRate) {\n  return (center / (scale * sampleRate * 2.0))\n}\n\n# Perform CWT\ncoef = cwt(signal, noctave=octaves, nvoice=voices, w0=(2.0 * pi * 0.8125), twoD=TRUE, plot=FALSE)\n\n# Plots\ntime = seq(0, (length(signal) - 1) / sampleRate, by=(1.0 / sampleRate))\nscales = floor(scaleToFreq(getScales(octaves, voices), 0.8125, 1.0 / sampleRate) * 10) / 10\nimage(time, 1:dim(coef)[2], abs(coef)^2.0, yaxt=\"n\", ylab=\"Frequency, Hz\", xlab=\"Time, s\",\n      col=matlab.like(256))\naxis(2, at=seq(1, (octaves * voices)), labels=scales)\n",
                  "signal": "EcgWaveform",
                  "sampleRate": 256.0,
                  "octaves": 8,
                  "voices": 16,
                  "removeDc": true
                }
              }
            },
            "children": [
            ]
          }
        ]
      },
      {
        "containerType": "panel",
        "state": {
          "width": 483,
          "height": 641,
          "element": {
            "id": "ee93e2f0-0b50-11e9-f361-09769be29fbf",
            "type": "Scripting Viewer",
            "look": {
              "script": "#name: Spectrogram\n#description: Spectrogram plot\n#help: https://en.wikipedia.org/wiki/Spectrogram\n#language: r\n#tags: demo, viewers\n#sample: sensors/ecg.csv\n#input: dataframe data [Input data table]\n#input: column signal {type:numerical; allowNulls:false} [Column with signal]\n#input: double sampleRate = 256.0 [Signal sample rate, in Hz]\n#input: int windowLength = 1024 [FFT window length, in samples]\n#input: double timeStep = 0.1 [Analysis time step, in seconds]\n#input: bool removeDc = TRUE [Flag to force DC component removal]\n#output: graphics {name:spectrogram} [Spectrogram plot]\n\nrequire(signal)\nrequire(graphics)\nrequire(colorRamps)\n\n# Select signal column\nsignal = data[[signal]]\n\n# Remove DC\nif (removeDc == TRUE) {\n  signal = signal - mean(signal)\n}\n\n# Generate spectrogram\nspg <- specgram(signal, n=windowLength, Fs=sampleRate, window=hamming(windowLength),\n                overlap=windowLength - ceiling(timeStep * sampleRate))\nspect <- t(20*log10(abs(spg$S)))\n\n# Plots\ntime <- spg$t\nfreq <- spg$f\nimage(time, freq, spect, col=matlab.like(256), xlab=\"Time, s\", ylab=\"Frequency, Hz\")\n",
              "signal": "EcgWaveform",
              "sampleRate": 256.0,
              "windowLength": 1024,
              "timeStep": 0.1,
              "removeDc": true
            }
          }
        },
        "children": [
        ]
      }
    ],
    "tableId": "bc697ab0-0b50-11e9-c160-33a5f40c88c8"
  },
  "id": "bc6b9d90-0b50-11e9-dc3b-a529e41d7cbe",
  "name": "Ecg"
}
