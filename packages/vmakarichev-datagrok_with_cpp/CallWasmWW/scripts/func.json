{"lib.cpp": {"sum": {"arguments": {"a": {"type": "num"}, "b": {"type": "num"}}, "output": {"type": "int", "source": "_callResult"}, "annotation": ["//name: sum", "//input: int a", "//input: int b", "//output: int res "], "prototype": "sum(a, b)", "prototypeForWebWorker": "sumInWebWorker(a, b)", "callArgs": "[a, b]"}, "maxFloatCol": {"arguments": {"col": {"type": "floatColumn"}}, "output": {"type": "double", "source": "_callResult"}, "annotation": ["//name: maxFloatCol", "//input: dataframe df", "//input: column col", "//output: double max "], "prototype": "maxFloatCol(df, col)", "prototypeForWebWorker": "maxFloatColInWebWorker(df, col)", "callArgs": "[col]"}, "maxIntCol": {"arguments": {"col": {"type": "intColumn"}}, "output": {"type": "int", "source": "_callResult"}, "annotation": ["//name: maxIntCol", "//input: dataframe df", "//input: column col", "//output: int max "], "prototype": "maxIntCol(df, col)", "prototypeForWebWorker": "maxIntColInWebWorker(df, col)", "callArgs": "[col]"}, "addFloatCols": {"arguments": {"col1": {"type": "floatColumn"}, "col2": {"type": "floatColumn"}, "sum": {"type": "newFloatColumn", "numOfRows": {"ref": "col1", "value": "numOfRows"}}}, "output": {"type": "column", "source": "sum"}, "annotation": ["//name: addFloatCols", "//input: dataframe df", "//input: column col1", "//input: column col2", "//output: column sum"], "prototype": "addFloatCols(df, col1, col2)", "prototypeForWebWorker": "addFloatColsInWebWorker(df, col1, col2)", "callArgs": "[col1, col2]"}, "addIntCols": {"arguments": {"col1": {"type": "intColumn"}, "col2": {"type": "intColumn"}, "sum": {"type": "newIntColumn", "numOfRows": {"ref": "col1", "value": "numOfRows"}}}, "output": {"type": "column", "source": "sum"}, "annotation": ["//name: addIntCols", "//input: dataframe df", "//input: column col1", "//input: column col2", "//output: column sum"], "prototype": "addIntCols(df, col1, col2)", "prototypeForWebWorker": "addIntColsInWebWorker(df, col1, col2)", "callArgs": "[col1, col2]"}, "doubledInts": {"arguments": {"cols": {"type": "intColumns"}, "components": {"type": "newIntColumns", "numOfRows": {"ref": "cols", "value": "numOfRows"}, "numOfColumns": {"ref": "cols", "value": "numOfColumns"}}}, "output": {"type": "tableFromColumns", "source": "components"}, "annotation": ["//name: doubledInts", "//input: dataframe table", "//input: column_list cols", "//output: dataframe result "], "prototype": "doubledInts(table, cols)", "prototypeForWebWorker": "doubledIntsInWebWorker(table, cols)", "callArgs": "[cols]"}, "doubledFloats": {"arguments": {"cols": {"type": "floatColumns"}, "components": {"type": "newFloatColumns", "numOfRows": {"ref": "cols", "value": "numOfRows"}, "numOfColumns": {"ref": "cols", "value": "numOfColumns"}}}, "output": {"type": "tableFromColumns", "source": "components"}, "annotation": ["//name: doubledFloats", "//input: dataframe table", "//input: column_list cols", "//output: dataframe result "], "prototype": "doubledFloats(table, cols)", "prototypeForWebWorker": "doubledFloatsInWebWorker(table, cols)", "callArgs": "[cols]"}}, "pcaExport.cpp": {"principalComponentAnalysis": {"arguments": {"columns": {"type": "floatColumns"}, "componentsCount": {"type": "num"}, "components": {"type": "newFloatColumns", "numOfRows": {"ref": "columns", "value": "numOfRows"}, "numOfColumns": {"ref": "componentsCount", "value": "data"}}}, "output": {"type": "tableFromColumns", "source": "components"}, "annotation": ["//name: pca", "//input: dataframe table", "//input: column_list columns", "//input: int componentsCount", "//output: dataframe result "], "prototype": "pca(table, columns, componentsCount)", "prototypeForWebWorker": "pcaInWebWorker(table, columns, componentsCount)", "callArgs": "[columns, componentsCount]"}, "error": {"arguments": {"col1": {"type": "floatColumn"}, "col2": {"type": "floatColumn"}}, "output": {"type": "double", "source": "_callResult"}, "annotation": ["//name: error", "//input: dataframe df", "//input: column col1", "//input: column col2", "//output: double mad "], "prototype": "error(df, col1, col2)", "prototypeForWebWorker": "errorInWebWorker(df, col1, col2)", "callArgs": "[col1, col2]"}}, "PCA/PCA.cpp": {}, "plsExport.cpp": {"partialLeastSquareRegression": {"arguments": {"features": {"type": "floatColumns"}, "predict": {"type": "floatColumn"}, "componentsCount": {"type": "num"}, "prediction": {"type": "newFloatColumn", "numOfRows": {"ref": "predict", "value": "numOfRows"}}, "regressionCoefficients": {"type": "newFloatColumn", "numOfRows": {"ref": "features", "value": "numOfColumns"}}, "tScores": {"type": "newFloatColumns", "numOfRows": {"ref": "predict", "value": "numOfRows"}, "numOfColumns": {"ref": "componentsCount", "value": "data"}}, "uScores": {"type": "newFloatColumns", "numOfRows": {"ref": "predict", "value": "numOfRows"}, "numOfColumns": {"ref": "componentsCount", "value": "data"}}, "xLoadings": {"type": "newFloatColumns", "numOfRows": {"ref": "features", "value": "numOfColumns"}, "numOfColumns": {"ref": "componentsCount", "value": "data"}}}, "output": {"type": "objects", "source": "['prediction', 'regressionCoefficients', 'tScores', 'uScores', 'xLoadings']"}, "annotation": ["//name: pls", "//input: dataframe table", "//input: column_list features", "//input: column predict", "//input: int componentsCount"], "prototype": "pls(table, features, predict, componentsCount)", "prototypeForWebWorker": "plsInWebWorker(table, features, predict, componentsCount)", "callArgs": "[features, predict, componentsCount]"}}, "PLS/PLS.cpp": {}}