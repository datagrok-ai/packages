name: Help

on:
  workflow_dispatch: { }
  push:
    paths:
      - 'help/**'
      - 'docusaurus/**'
      - 'js-api/**'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Lint Markdown
        id: check
        uses: docker://ghcr.io/igorshubovych/markdownlint-cli:latest
        continue-on-error: true
        with:
          args: --output help/lint-check-report.md --config .github/linters/.markdownlint.yaml "help/**/*.md"
      - name: Set summary
        run: |
          echo "## Summary" >  "${GITHUB_STEP_SUMMARY}"
          if [ -s help/lint-check-report.md ]; then
            echo ":no_entry_sign: Some errors occurred" >> "${GITHUB_STEP_SUMMARY}"
            echo "## Errors per input" >> "${GITHUB_STEP_SUMMARY}"
            cat help/lint-check-report.md >> "${GITHUB_STEP_SUMMARY}"
            echo ":no_entry_sign: Markdown Linter errors:"
            cat help/lint-check-report.md
            echo "To test locally run the following:"
            echo 'docker run -v $(pwd):/workdir ghcr.io/igorshubovych/markdownlint-cli:latest --config .github/linters/.markdownlint.yaml "help/**/*.md"'
            exit 1
          else
            echo ":white_check_mark: Successful" >> "${GITHUB_STEP_SUMMARY}"
          fi

  convert:
    name: Convert to HTML
    needs: [lint]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: |
            docusaurus/package-lock.json
            js-api/package-lock.json
      - name: Cache Docusaurus
        uses: actions/cache@v3
        with:
          path: docusaurus/.docusaurus
          key: ${{ github.ref }}-docusaurus
      - name: Cache Docusaurus build
        uses: actions/cache@v3
        with:
          path: docusaurus/build
          key: ${{ github.ref }}-docusaurus-build
      - name: Install anchor-check
        run: npm install -g @untitaker/hyperlink
      - name: Install dependencies
        run: npm install
        working-directory: ./docusaurus
      - name: Install js-api dependencies
        run: npm install
        working-directory: ./js-api
      - name: Build Docusaurus website
        run: npm run build
        working-directory: ./docusaurus
      - name: Check anchors
        id: anchors
        working-directory: ./docusaurus
        continue-on-error: true
        run: |
          hyperlink --check-anchors build/ --sources ../help/ >  ../help/anchor-check-report.md 2>&1
          echo "result=success" >> $GITHUB_OUTPUT
      - name: Set summary
        run: |
          echo "## Summary" >  "${GITHUB_STEP_SUMMARY}"
          if [[ "${{ steps.anchors.outputs.result }}" == "success" ]]; then
            echo ":white_check_mark: Successful" >> "${GITHUB_STEP_SUMMARY}"
          else
            echo ":no_entry_sign: Some errors occurred" >> "${GITHUB_STEP_SUMMARY}"
            cat help/anchor-check-report.md >> "${GITHUB_STEP_SUMMARY}"
            sed -i '/Found some broken links, reading source files/a ## Errors per input' ${GITHUB_STEP_SUMMARY}
            sed -i -r 's,^(help/.*\.md)$,### \1,g' ${GITHUB_STEP_SUMMARY}
            sed -i 's,error:,**Error:**,g' ${GITHUB_STEP_SUMMARY}
            sed -i -r 's,(at line [0-9]+),**\1**,g' ${GITHUB_STEP_SUMMARY}
            sed -i -r 's,^(output/help.*\.html)$,### \1,g' ${GITHUB_STEP_SUMMARY}
            sed -i -r '/^Found [0-9]+ bad links/i ## Errors summary' ${GITHUB_STEP_SUMMARY}
            echo ":no_entry_sign: Hyperlink link checker errors:"
            cat help/anchor-check-report.md
            echo "To test locally run the following:"
            echo 'npm install -g @untitaker/hyperlink'
            echo 'cd docusaurus'
            echo 'npm install'
            echo 'npm run build'
            echo 'hyperlink --check-anchors build/ --sources ../help/'
            exit 1
          fi
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: docusaurus
          path: docusaurus/build
          retention-days: 7

  deploy:
    name: Deploy
    needs: convert
    concurrency:
      group: help-deploy-${{ github.ref }}
      cancel-in-progress: true
#    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-20.04
    environment: Help
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: docusaurus
          path: docusaurus/build
      - name: Deploy to server
        shell: bash
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          sudo chmod 400 ~/.ssh/id_rsa
          echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
          rsync \
            --recursive \
            --links \
            --times \
            --omit-dir-times \
            --group --owner \
            --chown=grok:grok \
            --perms --executability --acls --xattrs \
            --devices --specials \
            --checksum \
            --delete-after \
            --compress \
            --update \
            --verbose \
            --progress \
            --itemize-changes \
            --stats \
            --human-readable \
            "docusaurus/build/" "$REMOTE_USER@$REMOTE_HOST:$TARGET"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.HELP_SSH_KEY }}
          SSH_KNOWN_HOSTS: ${{ secrets.HELP_KNOWN_HOST }}
          REMOTE_HOST: ${{ secrets.HELP_HOST }}
          REMOTE_USER: ${{ secrets.HELP_USER }}
          TARGET: ${{ secrets.WIKI_DOCS_TARGET }}

  scrape:
    name: Scrape
    needs: deploy
    environment: Help
    concurrency:
      group: help-scrape-${{ github.ref }}
      cancel-in-progress: true
    #    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Update the DocSearch index
        uses: celsiusnarhwal/typesense-scraper@v2
        with:
          api-key: ${{ secrets.TYPESENSE_API_KEY }}
          host: ${{ secrets.TYPESENSE_HOST }}
          port: ${{ secrets.TYPESENSE_PORT }}
          protocol: ${{ secrets.TYPESENSE_PROTOCOL }}
          config: docusaurus/docsearch.json
