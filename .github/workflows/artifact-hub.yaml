name: Artifacthub Deploy

on:
  push:
    branches:
      - vhlushchenko/GROK-16669/deploy_helm_charts
    paths:
      - 'helm/base/**'
  workflow_dispatch:


permissions:
  contents: write
  id-token: write

jobs:
  helm-lint-deploy-packages:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      HELM_REPO_URL: https://datagrok-ai.github.io/public/charts
      HELM_REPO_NAME: datagrok
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Add helm repo
        run: helm repo add ${HELM_REPO_NAME} ${HELM_REPO_URL}
      - uses: dorny/paths-filter@v3
        id:  chart_changes
        with:
          filters: |
            grok_connect:
              - 'helm/base/datagrok_grok_connect/**'
            grok_spawner:
              - 'helm/base/datagrok_grok_spawner/**'
            jkg:
              - 'helm/base/datagrok_jkg/**'
            jn:
              - 'helm/base/datagrok_jupyter_notebook/**'
            grok_connect_publish:
              - 'helm/base/datagrok_grok_connect/Chart.yaml'
            grok_spawner_publish:
              - 'helm/base/datagrok_grok_spawner/Chart.yaml'
            jkg_publish:
              - 'helm/base/datagrok_jkg/Chart.yaml'
            jn_publish:
              - 'helm/base/datagrok_jupyter_notebook/Chart.yaml'
            

      - name: grok_connect lint
        if: steps.chart_changes.outputs.grok_connect == 'true'
        run: helm lint ./helm/base/datagrok_grok_connect
      - name: grok_spawner lint
        if: steps.chart_changes.outputs.grok_spawner == 'true'
        run: helm lint ./helm/base/datagrok_grok_spawner
      - name: helm lint jkg
        if: steps.chart_changes.outputs.jkg == 'true'
        run: helm lint ./helm/base/datagrok_jkg
      - name: helm lint jupyter_notebook
        if: steps.chart_changes.outputs.jn == 'true'
        run: helm lint ./helm/base/datagrok_jupyter_notebook
      - name: start minikube
        if: steps.chart_changes.outputs.jkg == 'true' || steps.chart_changes.outputs.jn == 'true' || steps.chart_changes.outputs.h2o == 'true' || steps.chart_changes.outputs.grok_connect == 'true' || steps.chart_changes.outputs.grok_spawner == 'true'
        id: minikube
        uses: medyagh/setup-minikube@latest
        with:
          addons: registry,ingress
          cache: false
          driver: docker
      - name: deploy grok connect
        if: steps.chart_changes.outputs.grok_connect == 'true'
        working-directory: ./helm/base/datagrok_grok_connect
        run: |
          helm install grok-connect-test . -f values.yaml -n datagrok --dry-run
      - name: deploy grok spawner
        if: steps.chart_changes.outputs.grok_spawner == 'true'
        working-directory: ./helm/base/datagrok_grok_spawner
        run: |
          helm install grok-connect-test . -f values.yaml -n datagrok --dry-run
      - name: deploy jupyter notebook
        if: steps.chart_changes.outputs.jn == 'true'
        working-directory: ./helm/base/datagrok_jupyter_notebook
        run: |
          helm install jupyter-notebook-test . -f values.yaml -n datagrok --dry-run
      - name: deploy jkg
        if: steps.chart_changes.outputs.jkg == 'true'
        working-directory: ./helm/base/datagrok_jkg
        run: |
          helm install jkg-test . -f values.yaml -n datagrok --dry-run
      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
      - name: Publish grok_connect status
        if: steps.chart_changes.outputs.grok_connect_publish == 'true'
        run: |
          helm package ./helm/base/datagrok_grok_connect -d ./helm/charts
      - name: Publish grok_spawner status
        if: steps.chart_changes.outputs.grok_spawner_publish == 'true'
        run: |
          helm package ./helm/base/datagrok_grok_spawner -d ./helm/charts
      - name: Publish jkg status
        if: steps.chart_changes.outputs.jkg_publish == 'true'
        run: |
          helm package ./helm/base/datagrok_jkg -d ./helm/charts
      - name: Publish jupyter_notebook status
        if: steps.chart_changes.outputs.jn_publish == 'true'
        run: |
          helm package ./helm/base/datagrok_jupyter_notebook -d ./helm/charts
      - name: Publish
        if: steps.chart_changes.outputs.jkg_publish == 'true' || steps.chart_changes.outputs.jn_publish == 'true' || steps.chart_changes.outputs.grok_connect_publish == 'true' || steps.chart_changes.outputs.grok_spawner_publish == 'true'
        run: |
          helm repo index helm/charts
          git add .
          git commit -m "Bump version helm charts"
          git push 
      

  helm-lint-deploy-datagrok:
    runs-on: ubuntu-latest
    needs: [helm-lint-deploy-packages]
    timeout-minutes: 30
    env:
      HELM_REPO_URL: https://datagrok-ai.github.io/public/charts
      HELM_REPO_NAME: datagrok
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Git pull changes
        run: git pull
      - name: Add helm repo
        run: helm repo add ${HELM_REPO_NAME} ${HELM_REPO_URL}
      - uses: dorny/paths-filter@v3
        id:  chart_changes
        with:
          filters: |
            datagrok:
              - 'helm/base/datagrok-helm-chart/**'
            datagrok_publish:
              - 'helm/base/datagrok-helm-chart/Chart.yaml'
      - name: datagrok lint
        if: steps.chart_changes.outputs.datagrok == 'true'
        run: helm lint ./helm/base/datagrok-helm-chart

      - name: datagrok dependency update
        if: steps.chart_changes.outputs.datagrok_publish == 'true'
        working-directory: ./helm/base/datagrok-helm-chart
        run: |
          sleep 30
          helm dependency list
          helm repo update
          helm dependency update --debug
      - name: helm package
        run: helm package ./helm/base/datagrok-helm-chart -d ./helm/charts
      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
      - name: Publish
        run: |
          helm repo index helm/charts
          git add .
          git commit -m "Bump version datagrok helm charts"
          git push 
