name: Tools Package
on:
  workflow_dispatch: { }
  push:
    paths:
      - 'tools/**'
  pull_request:
    paths:
      - 'tools/**'

jobs:
  common-check:
    name: Common checks
    uses: ./.github/workflows/common_check.yaml
    with:
      run_trigger: ${{ github.event_name }}

  check:
    needs: common-check
    runs-on: ubuntu-20.04
    if: needs.common-check.outputs.continue == 'true'
    name: Check version was changed
    outputs:
      changed_version: ${{ steps.check-version.outputs.changed_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Check version was changed
        id: check-version
        working-directory: ./tools
        run: |
          name="$(jq .name package.json | sed 's/"//g')"
          current_version="$(jq .version package.json | sed 's/"//g')"
          npm_version="$(curl --retry 3 -s "https://registry.npmjs.org/${name}/${current_version}" | jq -r '.? | select( has("version") == true ).version')"
          if [[ $npm_version == ${current_version} ]]; then
            changed_version='false'
          else
            changed_version='true'
          fi
          echo '::echo::on'
          echo "::set-output name=changed_version::${changed_version}"
          echo '::echo::off'

  build:
    name: Build and publish to npm
    needs: [check, common-check]
    runs-on: ubuntu-20.04
    if: needs.common-check.outputs.continue == 'true'
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.WRITE_TOKEN }}
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Upgrade npm
        run: npm install -g npm@x
      - name: npm version
        run: npm version
      - run: npm install
        working-directory: ./tools
      - run: npm publish
        working-directory: ./tools
        if: github.ref == 'refs/heads/master' && needs.check.outputs.changed_version == 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Commit package-lock.json
        continue-on-error: true
        if: github.ref == 'refs/heads/master' && needs.check.outputs.changed_version == 'true'
        run: |
          if [ -n "$(git status -s tools/package-lock.json)" ]; then
            git config --global user.name 'github-actions[bot]'
            git config --global user.email 'github-actions[bot]@users.noreply.github.com'
            git pull
            git add tools/package-lock.json
            git commit -m 'GitHub Actions: Update tools/package-lock.json [skip ci]

            Workflow ${{ github.workflow }} ${{ github.run_number }}
            https://github.com/datagrok-ai/public/actions/runs/${{ github.run_id }}'
            count=0
            until git push; do
              exit=$?
              wait=$((2 ** count))
              count=$((count + 1))
              if [ $count -lt "10" ]; then
                echo "Retry $count/$retries exited $exit, retrying 'git push' in $wait seconds..."
                sleep $wait
                git pull --rebase
              else
                echo "Retry $count/$retries exited $exit, no more retries left for 'git push'."
                exit $exit
              fi
            done
          fi
