import * as DG from 'datagrok-api/dg';
export declare class PinnedColumn {
    private static MIN_COL_WIDTH;
    private static MAX_COL_WIDTH;
    private static MIN_ROW_HEIGHT;
    private static MAX_ROW_HEIGHT;
    private static SELECTION_COLOR;
    private static ACTIVE_CELL_COLOR;
    private static SORT_ARROW_COLOR;
    private static Y_RESIZE_SENSITIVITY;
    private static X_RESIZE_SENSITIVITY;
    private m_fDevicePixelRatio;
    private m_colGrid;
    private m_root;
    private m_nWidthBug;
    private m_observerResizeGrid;
    private m_handlerKeyDown;
    private m_handlerColsRemoved;
    private m_handlerColNameChanged;
    private m_handlerVScroll;
    private m_handlerRowsFiltering;
    private m_handlerCurrRow;
    private m_handlerSel;
    private m_handlerRowsResized;
    private m_handlerRowsSorted;
    private m_handlerPinnedRowsChanged;
    private m_handlerColorCoding;
    private m_nHResizeRowsBeforeDrag;
    private m_nResizeRowGridDragging;
    private m_nYResizeDraggingAnchor;
    private m_nResizeRowGridMoving;
    private m_nWResizeColPinBeforeDrag;
    private m_bResizeColPinMoving;
    private m_bResizeColPinDragging;
    private m_nXResizeColPinDraggingAnchor;
    private m_nYDraggingAnchor;
    private m_nRowGridDragging;
    private m_nWheelCount;
    private m_arXYMouseOnCellDown;
    private m_arXYMouseOnCellUp;
    private m_bSortedAscending;
    private m_cellCurrent;
    private m_bThisColumnIsSorting;
    constructor(colGrid: DG.GridColumn);
    isPinned(): boolean;
    getGridColumn(): DG.GridColumn | null;
    getWidth(): number;
    getRoot(): HTMLCanvasElement | null;
    close(): void;
    onMouseEnter(e: MouseEvent): void;
    onMouseMove(e: MouseEvent): void;
    onMouseDrag(e: MouseEvent): void;
    onMouseLeave(e: MouseEvent, bOverlap: boolean): void;
    onMouseDblClick(e: MouseEvent): void;
    onMouseDown(e: MouseEvent): void;
    onMouseUp(e: MouseEvent): void;
    onContextMenu(e: MouseEvent): void;
    onMouseWheel(e: WheelEvent): void;
    paint(g: CanvasRenderingContext2D | null, grid: DG.Grid): void;
    private static hitTestRows;
}
//# sourceMappingURL=PinnedColumn.d.ts.map